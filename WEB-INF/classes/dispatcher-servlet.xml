<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 启用Spring基于annotation的DI, 使用户可以在Spring MVC中使用Spring的强大功能。 激活 @Required
    @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等标注 -->
    <context:annotation-config/>
    <!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service -->
    <context:component-scan base-package="studio.geek">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.RestControllerAdvice"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--扩充了注解驱动，可以将请求参数绑定到控制器参数-->
    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>

    <!--<bean id="parameterInterceptor" class="studio.geek.interceptor.ParameterInterceptor"/>-->
    <!--<aop:config>-->
        <!--<aop:aspect id="demoAOP" ref="parameterInterceptor">-->
            <!--<aop:pointcut id="demoPointcut" expression="execution(* *.set*(..))"/>-->

            <!--<aop:around method="parameterInterceptor" pointcut-ref="demoPointcut"/>-->

            <!--<aop:before method="before" pointcut-ref="demoPointcut"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <!--<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>-->

    <!--&lt;!&ndash; 配置静态资源 &ndash;&gt;-->
    <!--<mvc:default-servlet-handler/>-->

    <!--&lt;!&ndash;配置视图解析器 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="contentNegotiationManager" ref="contentNegotiationManager"/>-->
        <!--<property name="viewResolvers">-->
            <!--<list>-->
                <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>-->
                <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
                    <!--<property name="prefix" value="/"></property>-->
                    <!--<property name="suffix" value=".html"></property>-->
                    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->

        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">-->
        <!--<property name="mediaTypes">-->
            <!--<map>-->
                <!--<entry key="json" value="application/json"/>-->
                <!--<entry key="xml" value="application/xml"/>-->
                <!--<entry key="html" value="text/html"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--&lt;!&ndash;如果所有的mediaType都没匹配上，就会使用defaultContentType&ndash;&gt;-->
        <!--<property name="defaultContentType" value="application/json"/>-->
        <!--<property name="ignoreAcceptHeader" value="true"/>-->
        <!--<property name="favorPathExtension" value="true"/>-->
    <!--</bean>-->

</beans>